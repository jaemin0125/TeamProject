package com.example.demo.config;

import org.springframework.context.annotation.Configuration;
import org.springframework.messaging.simp.config.MessageBrokerRegistry;
import org.springframework.web.socket.config.annotation.EnableWebSocketMessageBroker;
import org.springframework.web.socket.config.annotation.StompEndpointRegistry;
import org.springframework.web.socket.config.annotation.WebSocketMessageBrokerConfigurer;

@Configuration
@EnableWebSocketMessageBroker // STOMP 기반 웹소켓 메시지 처리를 활성화
public class WebSocketConfig implements WebSocketMessageBrokerConfigurer {

    @Override
    public void configureMessageBroker(MessageBrokerRegistry config) {
        // "/topic"으로 시작하는 메시지는 브로커로 라우팅 (클라이언트에게 전송)
        config.enableSimpleBroker("/topic");
        // "/app"으로 시작하는 메시지는 @MessageMapping이 붙은 컨트롤러로 라우팅
        config.setApplicationDestinationPrefixes("/app");
    }

    @Override
    public void registerStompEndpoints(StompEndpointRegistry registry) {
        // 클라이언트가 웹소켓 연결을 할 엔드포인트 등록
        // SockJS 지원을 추가하여 웹소켓을 지원하지 않는 브라우저에서도 폴백 가능하게 함
        registry.addEndpoint("/ws-connect")
                .setAllowedOriginPatterns("*") // 모든 오리진 허용 (개발 단계에서 편리, 실제 서비스에서는 특정 도메인 지정)
                .withSockJS();
    }
}